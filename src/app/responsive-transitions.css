/**
 * Responsive Transitions CSS
 * 
 * This file implements smooth transitions for responsive layout changes
 * and prevents horizontal scrolling at any screen size.
 * 
 * Requirements: 3.3, 4.4
 */

/* ============================================
   GLOBAL OVERFLOW PREVENTION
   ============================================ */

/**
 * Prevent horizontal scrolling at the root level
 * This ensures no content can cause horizontal overflow
 */
html {
  overflow-x: hidden;
  /* Smooth scrolling for better UX */
  scroll-behavior: smooth;
}

body {
  overflow-x: hidden;
  /* Ensure body doesn't exceed viewport width */
  max-width: 100vw;
}

/* ============================================
   RESPONSIVE LAYOUT TRANSITIONS
   ============================================ */

/**
 * Smooth transitions for all responsive containers
 * Applies to padding, width, and margin changes during breakpoint transitions
 */
[class*="responsive"],
[class*="ResponsiveContainer"],
[class*="ResponsiveGrid"],
[class*="MultiColumnLayout"] {
  transition: padding 0.3s ease-in-out,
              width 0.3s ease-in-out,
              margin 0.3s ease-in-out,
              max-width 0.3s ease-in-out;
}

/**
 * Grid layout transitions
 * Smooth column count changes and gap adjustments
 */
.grid {
  transition: gap 0.3s ease-in-out,
              grid-template-columns 0.3s ease-in-out;
}

/**
 * Flexbox layout transitions
 * Smooth flex direction and gap changes
 */
.flex {
  transition: gap 0.3s ease-in-out,
              flex-direction 0.3s ease-in-out;
}

/* ============================================
   SIDEBAR TRANSITIONS
   ============================================ */

/**
 * Smooth sidebar appearance/disappearance
 * Applies to sidebars that show/hide at different breakpoints
 */
aside {
  transition: opacity 0.3s ease-in-out,
              transform 0.3s ease-in-out,
              width 0.3s ease-in-out;
}

/**
 * Ensure sidebars don't cause overflow when hidden
 */
aside.hidden {
  opacity: 0;
  pointer-events: none;
  /* Prevent layout shift by maintaining space */
  width: 0;
  min-width: 0;
  padding: 0;
  margin: 0;
}

/* ============================================
   CONTENT AREA TRANSITIONS
   ============================================ */

/**
 * Main content area smooth resizing
 * Ensures smooth transitions when sidebars appear/disappear
 */
main {
  transition: width 0.3s ease-in-out,
              max-width 0.3s ease-in-out,
              padding 0.3s ease-in-out;
  /* Prevent overflow */
  overflow-x: hidden;
  min-width: 0;
}

/* ============================================
   CARD AND TILE TRANSITIONS
   ============================================ */

/**
 * Smooth card resizing during grid reflow
 * Prevents jarring layout shifts when columns change
 */
[class*="rounded-lg"],
[class*="card"],
.border {
  transition: width 0.3s ease-in-out,
              transform 0.2s ease-in-out,
              box-shadow 0.2s ease-in-out;
}

/* ============================================
   TEXT AND TYPOGRAPHY TRANSITIONS
   ============================================ */

/**
 * Smooth font size transitions for responsive typography
 * Applies to all text elements with responsive classes
 */
[class*="text-responsive"],
[class*="hierarchy"] {
  transition: font-size 0.2s ease-in-out,
              line-height 0.2s ease-in-out;
}

/* ============================================
   IMAGE AND MEDIA TRANSITIONS
   ============================================ */

/**
 * Prevent images from causing horizontal overflow
 */
img,
video,
canvas,
svg {
  max-width: 100%;
  height: auto;
  /* Smooth size transitions */
  transition: width 0.3s ease-in-out,
              height 0.3s ease-in-out;
}

/* ============================================
   BREAKPOINT-SPECIFIC OPTIMIZATIONS
   ============================================ */

/**
 * Mobile (< 768px)
 * Faster transitions for better mobile performance
 */
@media (max-width: 767px) {
  [class*="responsive"],
  .grid,
  .flex {
    transition-duration: 0.2s;
  }
}

/**
 * Tablet (768px - 1024px)
 * Standard transition speeds
 */
@media (min-width: 768px) and (max-width: 1023px) {
  /* Ensure smooth column transitions from 1 to 2 columns */
  .grid {
    transition: grid-template-columns 0.3s ease-in-out;
  }
}

/**
 * Desktop (1024px - 1440px)
 * Smooth transitions for 2 to 3 column layouts
 */
@media (min-width: 1024px) and (max-width: 1439px) {
  /* Ensure smooth sidebar appearance */
  aside {
    transition: opacity 0.4s ease-in-out,
                width 0.4s ease-in-out;
  }
}

/**
 * Large Desktop (> 1440px)
 * Smooth transitions for 3 to 4+ column layouts
 */
@media (min-width: 1440px) {
  /* Slower transitions for larger layout changes */
  .grid {
    transition: grid-template-columns 0.4s ease-in-out;
  }
  
  /* Smooth right sidebar appearance */
  aside:last-of-type {
    transition: opacity 0.4s ease-in-out,
                width 0.4s ease-in-out;
  }
}

/* ============================================
   REDUCED MOTION SUPPORT
   ============================================ */

/**
 * Respect user's motion preferences
 * Disable transitions for users who prefer reduced motion
 */
@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

/* ============================================
   WINDOW RESIZE OPTIMIZATION
   ============================================ */

/**
 * Prevent layout thrashing during window resize
 * Uses will-change to optimize performance
 */
@media (hover: hover) {
  /* Only apply on devices with hover capability (desktops) */
  [class*="responsive"],
  .grid,
  .flex,
  aside,
  main {
    will-change: width, padding, gap;
  }
}

/* ============================================
   HORIZONTAL SCROLL PREVENTION
   ============================================ */

/**
 * Ensure all containers prevent horizontal overflow
 */
* {
  /* Prevent any element from exceeding viewport width */
  max-width: 100%;
  box-sizing: border-box;
}

/**
 * Specific overflow prevention for common culprits
 */
pre,
code,
table {
  overflow-x: auto;
  max-width: 100%;
}

/**
 * Prevent text from causing overflow
 */
p,
h1,
h2,
h3,
h4,
h5,
h6 {
  overflow-wrap: break-word;
  word-wrap: break-word;
  hyphens: auto;
}

/* ============================================
   LAYOUT SHIFT PREVENTION
   ============================================ */

/**
 * Prevent cumulative layout shift (CLS) during transitions
 * Reserve space for elements that will appear
 */
.transition-opacity {
  /* Maintain layout space even when opacity is 0 */
  visibility: visible;
}

/**
 * Smooth opacity transitions for appearing/disappearing elements
 */
.fade-in {
  animation: fadeIn 0.3s ease-in-out;
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

.fade-out {
  animation: fadeOut 0.3s ease-in-out;
}

@keyframes fadeOut {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

/* ============================================
   GRID REFLOW OPTIMIZATION
   ============================================ */

/**
 * Optimize grid reflow during breakpoint changes
 * Prevents jarring jumps when columns change
 */
.grid > * {
  transition: transform 0.3s ease-in-out,
              opacity 0.3s ease-in-out;
}

/**
 * Ensure grid items don't overflow their containers
 */
.grid > * {
  min-width: 0;
  min-height: 0;
  overflow: hidden;
}

/* ============================================
   TOUCH DEVICE OPTIMIZATIONS
   ============================================ */

/**
 * Optimize transitions for touch devices
 * Faster transitions for better perceived performance
 */
@media (hover: none) {
  [class*="responsive"],
  .grid,
  .flex {
    transition-duration: 0.2s;
  }
}

/**
 * Prevent horizontal scroll on touch devices
 * Touch devices are more prone to accidental horizontal scrolling
 */
@media (hover: none) {
  body {
    overflow-x: hidden;
    -webkit-overflow-scrolling: touch;
  }
}
